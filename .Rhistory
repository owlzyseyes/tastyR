usethis::use_cc0_license()
install.packages("roxygen2")
Sys.which("make")
Sys.which("make")
setwd("~/Projects/tastyR")
usethis::use_readme_rmd()
browseURL("https://github.com/owlzyseyes/tastyR")
citation("tastyR")
usethis::use_data_raw("allrecipes")
allrecipes <- readr::read_csv("data-raw/allrecipes.csv")
View(allrecipes)
spec(allrecipes)
readr::spec(allrecipes)
View(allrecipes)
ct <- cols(
name = col_character(),
url = col_character(),
author = col_character(),
date_published = col_date(format = ""),
ingredients = col_character(),
calories = col_double(),
fat = col_double(),
carbs = col_double(),
protein = col_double(),
avg_rating = col_double(),
n_ratings = col_double(),
n_reviews = col_double(),
prep_time = col_double(),
cook_time = col_double(),
total_time = col_double(),
servings = col_double()
)
## code to prepare `allrecipes` dataset goes here
library(readr)
ct <- cols(
name = col_character(),
url = col_character(),
author = col_character(),
date_published = col_date(format = ""),
ingredients = col_character(),
calories = col_double(),
fat = col_double(),
carbs = col_double(),
protein = col_double(),
avg_rating = col_double(),
n_ratings = col_double(),
n_reviews = col_double(),
prep_time = col_double(),
cook_time = col_double(),
total_time = col_double(),
servings = col_double()
)
allrecipes <- readr::read_csv("data-raw/allrecipes.csv",
col_types = ct)
usethis::use_data(allrecipes, overwrite = TRUE)
usethis::use_r("allrecipes")
## code to prepare `allrecipes` dataset goes here
library(readr)
ct <- cols(
name = col_character(),
url = col_character(),
author = col_character(),
date_published = col_date(format = ""),
ingredients = col_character(),
calories = col_double(),
fat = col_double(),
carbs = col_double(),
protein = col_double(),
avg_rating = col_double(),
n_ratings = col_double(),
n_reviews = col_double(),
prep_time = col_double(),
cook_time = col_double(),
total_time = col_double(),
servings = col_double()
)
allrecipes <- readr::read_csv("data-raw/allrecipes.csv",
col_types = ct)
names(allrecipes)
names(allrecipes) |> dput()
vars <- c("name" = "Name of the recipe",
"url" = "Link to the recipe",
"author" = "Author of the recipe",
"date_published" = "When the recipe was published/updated",
"ingredients" = "The ingredients of the recipe",
"calories" = "Calories per serving",
"fat" = "Fat per serving",
"carbs" = "carbs per serving",
"protein" = "Proteins per serving",
"avg_rating" = "Average rating out of 5 stars",
"n_ratings" = "Number of ratings received",
"n_reviews" = "Number of written reviews",
"prep_time" = "Preparation time in minutes",
"cook_time" = "Cooking time in minutes",
"total_time" = "Prep + cook time in minutes.Note that this value may not always match the actual total effort required, as other time-related fields (such as refrigeration, marination, fry time, or additional wait periods) have been excluded due to inconsistent availability across recipes",
"servings" = "Number of servings"
)
glue::glue("#'   \\item{[colname]}{[coldesc]}",
colname = names(vars),
coldesc = vars,
.open = "[",
.close = "]")
devtools::document()
devtools::document()
library(tastyR)
devtools::load_all(".")
devtools::document()
devtools::build()
devtools::load_all(".")
allrecipes
data("allrecipes")
?tastyR
devtools::load_all(".")
library(tastyR)
?tastyR::allrecipes
usethis::use_data_raw("cuisines")
## code to prepare `cuisines` dataset goes here
library(readr)
## code to prepare `cuisines` dataset goes here
library(readr)
cuisines <- readr::read_csv("data-raw/cuisines.csv")
View(cuisines)
spec(cuisines)
ct <- cols(
name = col_character(),
country = col_character(),
url = col_character(),
author = col_character(),
date_published = col_date(format = ""),
ingredients = col_character(),
calories = col_double(),
fat = col_double(),
carbs = col_double(),
protein = col_double(),
avg_rating = col_double(),
total_ratings = col_double(),
reviews = col_double(),
prep_time = col_double(),
cook_time = col_double(),
total_time = col_double(),
servings = col_double()
)
cuisines <- readr::read_csv("data-raw/cuisines.csv", col_types = ct)
cuisines <- readr::read_csv("data-raw/cuisines.csv", col_types = ct)
usethis::use_data(cuisines, overwrite = TRUE)
usethis::use_r("cuisines")
coldesc <- rep("", ncol(cuisines))
names(coldesc) <- names(cuisines)
dput(coldesc)
vars <- c(name = "",
country = "",
url = "",
author = "",
date_published = "",
ingredients = "",
calories = "",
fat = "",
carbs = "",
protein = "",
avg_rating = "",
total_ratings = "",
reviews = "",
prep_time = "",
cook_time = "",
total_time = "",
servings = "")
vars <- c("name" = "Name of the recipe",
"country" = "The country/region the cuisine is from.",
"url" = "Link to the recipe",
"author" = "Author of the recipe",
"date_published" = "When the recipe was published/updated",
"ingredients" = "The ingredients of the recipe",
"calories" = "Calories per serving",
"fat" = "Fat per serving",
"carbs" = "carbs per serving",
"protein" = "Proteins per serving",
"avg_rating" = "Average rating out of 5 stars",
"total_ratings" = "Number of ratings received",
"reviews" = "Number of written reviews",
"prep_time" = "Preparation time in minutes",
"cook_time" = "Cooking time in minutes",
"total_time" = "Prep + cook time in minutes.Note that this value may not always match the actual total effort required, as other time-related fields (such as refrigeration, marination, fry time, or additional wait periods) have been excluded due to inconsistent availability across recipes",
"servings" = "Number of servings")
glue::glue("#'   \\item{[colname]}{[coldesc]}",
colname = names(vars),
coldesc = vars,
.open = "[",
.close = "]")
devtools::document()
install.packages("devtools")
devtools::document()
devtools::load_all(".")
?tastyR::cuisines
cuisines <- data("cuisines")
cuisines
cuisines <- data("cuisines", package = "tastyR")
?tastyR::cuisines
?tastyR::allrecipes
?tastyR
??tastyR
## code to prepare `allrecipes` dataset goes here
library(readr)
allrecipes <- readr::read_csv("data-raw/allrecipes.csv")
View(allrecipes)
spec(allrecipes)
ct <- cols(
name = col_character(),
url = col_character(),
author = col_character(),
date_published = col_date(format = ""),
ingredients = col_character(),
calories = col_double(),
fat = col_double(),
carbs = col_double(),
protein = col_double(),
avg_rating = col_double(),
total_ratings = col_double(),
reviews = col_double(),
prep_time = col_double(),
cook_time = col_double(),
total_time = col_double(),
servings = col_double()
)
allrecipes <- readr::read_csv("data-raw/allrecipes.csv",
col_types = ct)
View(allrecipes)
usethis::use_data(allrecipes, overwrite = TRUE)
vars <- c("name" = "Name of the recipe",
"url" = "Link to the recipe",
"author" = "Author of the recipe",
"date_published" = "When the recipe was published/updated",
"ingredients" = "The ingredients of the recipe",
"calories" = "Calories per serving",
"fat" = "Fat per serving",
"carbs" = "carbs per serving",
"protein" = "Proteins per serving",
"avg_rating" = "Average rating out of 5 stars",
"total_ratings" = "Number of ratings received",
"reviews" = "Number of written reviews",
"prep_time" = "Preparation time in minutes",
"cook_time" = "Cooking time in minutes",
"total_time" = "Prep + cook time in minutes.Note that this value may not always match the actual total effort required, as other time-related fields (such as refrigeration, marination, fry time, or additional wait periods) have been excluded due to inconsistent availability across recipes",
"servings" = "Number of servings"
)
devtools::document()
devtools::load_all(".")
data("allrecipes")
View(allrecipes)
?tastyR::allrecipes
devtools::document()
devtools::load_all(".")
?tastyR::allrecipes
Sys.which("make")
C:\rtools44\mingw64\bin
Sys.which("make")
Sys.which("make")
pkgbuild::check_build_tools(debug = TRUE)
Sys.getenv("PATH")
devtools::load_all(".")
Sys.which("make")
data("allrecipes")
data("cuisines")
data("allrecipes")
data("allrecipes")
data("cuisines")
View(cuisines)
spec(cuisines)
cuisines <- data("cuisines")
View(allrecipes)
data("cuisines")
View(cuisines)
renv::activate()
renv::restore()
setwd("~/New folder/Projects/tastyR")
renv::restore()
install.packages("roxygen")
install.packages("roxygen")
install.packages("roxygen")
install.packages("roxygen2")
Sys.which("make")
pkgbuild::find_rtools()
Sys.which("make")
pkgbuild::find_rtools()
pkgbuild::find_rtools()
Sys.which("make")
pkgbuild::find_rtools()
Sys.which("pdflatex")
Sys.which("pdflatex")
